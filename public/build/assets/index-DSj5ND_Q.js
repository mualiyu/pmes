import{R as m}from"./app-CQeDVQuS.js";import{u as E}from"./with-selector-Dx34AVcc.js";const g={},a=t=>{let e;const o=new Set,n=(s,u)=>{const r=typeof s=="function"?s(e):s;if(!Object.is(r,e)){const p=e;e=u??(typeof r!="object"||r===null)?r:Object.assign({},e,r),o.forEach(S=>S(e,p))}},i=()=>e,c={setState:n,getState:i,getInitialState:()=>f,subscribe:s=>(o.add(s),()=>o.delete(s)),destroy:()=>{(g?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),o.clear()}},f=e=t(n,i,c);return c},y=t=>t?a(t):a,b={},{useDebugValue:_}=m,{useSyncExternalStoreWithSelector:v}=E;let d=!1;const h=t=>t;function w(t,e=h,o){(b?"production":void 0)!=="production"&&o&&!d&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),d=!0);const n=v(t.subscribe,t.getState,t.getServerState||t.getInitialState,e,o);return _(n),n}const l=t=>{(b?"production":void 0)!=="production"&&typeof t!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const e=typeof t=="function"?y(t):t,o=(n,i)=>w(e,n,i);return Object.assign(o,e),o},j=t=>t?l(t):l;export{j as c};
